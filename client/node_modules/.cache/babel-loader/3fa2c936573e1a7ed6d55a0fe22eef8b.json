{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\AppDev\\\\microservice-test\\\\client\\\\src\\\\Components\\\\CommentList\\\\CommentList.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (_ref => {\n  let {\n    comments\n  } = _ref;\n  const renderedComments = comments.map(comment => {\n    let content;\n\n    if (comment.status === \"approved\") {\n      content = comment.content;\n    }\n\n    ;\n\n    if (comment.status === \"pending\") {\n      content = \"this comment is awaiting moderation\";\n    }\n\n    ;\n\n    if (comment.status === \"rejected\") {\n      content = \"this comment has been rejected\";\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: comment.content\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: renderedComments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["C:/Users/david/Desktop/AppDev/microservice-test/client/src/Components/CommentList/CommentList.js"],"names":["React","comments","renderedComments","map","comment","content","status","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,gBAAe,QAAgB;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE3B,QAAMC,gBAAgB,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AAC7C,QAAIC,OAAJ;;AAEA,QAAGD,OAAO,CAACE,MAAR,KAAmB,UAAtB,EAAiC;AAC7BD,MAAAA,OAAO,GAAGD,OAAO,CAACC,OAAlB;AACH;;AAAA;;AAED,QAAGD,OAAO,CAACE,MAAR,KAAmB,SAAtB,EAAgC;AAC5BD,MAAAA,OAAO,GAAG,qCAAV;AACH;;AAAA;;AAED,QAAGD,OAAO,CAACE,MAAR,KAAmB,UAAtB,EAAiC;AAC7BD,MAAAA,OAAO,GAAG,gCAAV;AACH;;AAAA;AAED,wBAAO;AAAA,gBAAsBD,OAAO,CAACC;AAA9B,OAASD,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAhBwB,CAAzB;AAkBA,sBAAO;AAAA,cACNL;AADM;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAvBD","sourcesContent":["import React from 'react';\r\n\r\nexport default ({comments}) => {\r\n\r\n    const renderedComments = comments.map(comment => {\r\n        let content;\r\n\r\n        if(comment.status === \"approved\"){\r\n            content = comment.content;\r\n        };\r\n\r\n        if(comment.status === \"pending\"){\r\n            content = \"this comment is awaiting moderation\";\r\n        };\r\n\r\n        if(comment.status === \"rejected\"){\r\n            content = \"this comment has been rejected\"\r\n        };\r\n\r\n        return <li key={comment.id}>{comment.content}</li>;\r\n    })\r\n\r\n    return <ul>\r\n    {renderedComments}\r\n    </ul>\r\n};"]},"metadata":{},"sourceType":"module"}